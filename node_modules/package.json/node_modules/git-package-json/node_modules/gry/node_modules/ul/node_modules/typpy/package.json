{
  "name": "typpy",
  "version": "2.3.6",
  "description": "A better typeof for JavaScript.",
  "main": "lib/index.js",
  "directories": {
    "example": "example",
    "test": "test"
  },
  "scripts": {
    "test": "mocha test"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:IonicaBizau/typpy.git"
  },
  "keywords": [
    "typeof",
    "javascript",
    "typpy"
  ],
  "author": {
    "name": "Ionică Bizău",
    "email": "bizauionica@gmail.com",
    "url": "http://ionicabizau.net"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/IonicaBizau/typpy/issues"
  },
  "homepage": "https://github.com/IonicaBizau/typpy",
  "blah": {
    "h_img": "http://i.imgur.com/FkoAc5n.png"
  },
  "dependencies": {
    "function.name": "^1.0.3"
  },
  "devDependencies": {
    "mocha": "^2.2.5"
  },
  "files": [
    "bin/",
    "app/",
    "lib/",
    "build/",
    "dist/",
    "src/",
    "resources/",
    "menu/",
    "scripts/",
    "cli.js",
    "index.js"
  ],
  "readme": "\n[![typpy](http://i.imgur.com/FkoAc5n.png)](#)\n\n# typpy\n\n [![Patreon](https://img.shields.io/badge/Support%20me%20on-Patreon-%23e6461a.svg)][patreon] [![PayPal](https://img.shields.io/badge/%24-paypal-f39c12.svg)][paypal-donations] [![AMA](https://img.shields.io/badge/ask%20me-anything-1abc9c.svg)](https://github.com/IonicaBizau/ama) [![Travis](https://img.shields.io/travis/IonicaBizau/typpy.svg)](https://travis-ci.org/IonicaBizau/typpy/) [![Version](https://img.shields.io/npm/v/typpy.svg)](https://www.npmjs.com/package/typpy) [![Downloads](https://img.shields.io/npm/dt/typpy.svg)](https://www.npmjs.com/package/typpy) [![Get help on Codementor](https://cdn.codementor.io/badges/get_help_github.svg)](https://www.codementor.io/johnnyb?utm_source=github&utm_medium=button&utm_term=johnnyb&utm_campaign=github)\n\n> A better typeof for JavaScript.\n\n## :cloud: Installation\n\n```sh\n$ npm i --save typpy\n```\n\n\n## :clipboard: Example\n\n\n\n```js\n// Dependencies\nvar Typpy = require(\"typpy\");\n\nconsole.log(Typpy(0));\n// => \"number\"\n\nconsole.log(Typpy(\"\", String));\n// => true\n\nconsole.log(Typpy.is(null, \"null\"));\n// => true\n\nconsole.log(Typpy.get([]));\n// => Array\n\nconsole.log(Typpy({}, true));\n// => \"object\"\n\nconsole.log(Typpy({}, Object));\n// => true\n```\n\n## :memo: Documentation\n\n\n### `Typpy(input, target)`\nGets the type of the input value or compares it\nwith a provided type.\n\nUsage:\n\n```js\nTyppy({}) // => \"object\"\nTyppy(42, Number); // => true\nTyppy.get([], \"array\"); => true\n```\n\n#### Params\n- **Anything** `input`: The input value.\n- **Constructor|String** `target`: The target type. It could be a string (e.g. `\"array\"`) or a\nconstructor (e.g. `Array`).\n\n#### Return\n- **String|Boolean** It returns `true` if the input has the provided type `target` (if was provided),\n`false` if the input type does *not* have the provided type\n`target` or the stringified type of the input (always lowercase).\n\n### `Typpy.is(input, target)`\nChecks if the input value has a specified type.\n\n#### Params\n- **Anything** `input`: The input value.\n- **Constructor|String** `target`: The target type. It could be a string (e.g. `\"array\"`) or a\nconstructor (e.g. `Array`).\n\n#### Return\n- **Boolean** `true`, if the input has the same type with the target or `false` otherwise.\n\n### `Typpy.get(input, str)`\nGets the type of the input value. This is used internally.\n\n#### Params\n- **Anything** `input`: The input value.\n- **Boolean** `str`: A flag to indicate if the return value should be a string or not.\n\n#### Return\n- **Constructor|String** The input value constructor (if any) or the stringified type (always lowercase).\n\n\n\n## :yum: How to contribute\nHave an idea? Found a bug? See [how to contribute][contributing].\n\n\n## :moneybag: Donations\n\nAnother way to support the development of my open-source modules is\nto [set up a recurring donation, via Patreon][patreon]. :rocket:\n\n[PayPal donations][paypal-donations] are appreciated too! Each dollar helps.\n\nThanks! :heart:\n\n## :dizzy: Where is this library used?\nIf you are using this library in one of your projects, add it in this list. :sparkles:\n\n\n - [`animato`](https://github.com/IonicaBizau/animato.js#readme)—Simple way to animate anything (even simple values).\n - [`asyncer.js`](https://github.com/IonicaBizau/asyncer.js#readme)—Run groups of (a)sync functions.\n - [`babel-it`](https://github.com/IonicaBizau/babel-it#readme)—Babelify your code before `npm publish`.\n - [`barbe`](https://github.com/IonicaBizau/barbe)—Like mustache, but simple, tiny and fast.\n - [`blah`](https://github.com/IonicaBizau/blah)—A command line tool to optimize the repetitive actions.\n - [`bloggify-ajs-renderer`](https://github.com/IonicaBizau/bloggify-ajs-renderer#readme)—ajs renderer for Bloggify.\n - [`bug-killer`](https://github.com/IonicaBizau/node-bug-killer)—Simple way to log messages in stdout or other stream.\n - [`cli-circle`](https://github.com/IonicaBizau/node-cli-circle)—Generate ASCII circles with NodeJS.\n - [`cli-gh-cal`](https://github.com/IonicaBizau/cli-gh-cal)—GitHub like calendar graphs in command line.\n - [`color-it`](https://github.com/IonicaBizau/node-color-it#readme)—Flat colors for your Node.js strings.\n - [`couleurs`](https://github.com/IonicaBizau/node-couleurs)—Add some color and styles to your Node.JS strings.\n - [`deffy`](https://github.com/IonicaBizau/deffy.js)—Small and fast library to set default values.\n - [`diable`](https://github.com/IonicaBizau/diable)—Daemonize the things out.\n - [`dom-repeater`](https://github.com/IonicaBizau/dom-repeater#readme)—Render lists in DOM easily.\n - [`elm-select`](https://github.com/IonicaBizau/elm-select)—Select DOM elements and optionally call a function.\n - [`engine-builder`](https://github.com/IonicaBizau/engine-parser) (by jillix)—Engine composition parser.\n - [`engine-flow-types`](https://github.com/jillix/engine-flow-types#readme) (by jillix)—Low level library providing Engine flow types.\n - [`engine-parser`](https://github.com/IonicaBizau/engine-parser) (by jillix)—Engine composition parser.\n - [`enny`](https://github.com/IonicaBizau/enny) (by jillix)—Generate Engine compositions from human-readable inputs.\n - [`err`](https://github.com/IonicaBizau/err#readme)—A tiny library to create custom errors in JavaScript.\n - [`exec-limiter`](https://github.com/IonicaBizau/node-exec-limiter)—Limit the shell execution commands to <x> calls same time.\n - [`flattenize`](https://github.com/IonicaBizau/node-flattenize)—An experiment for converting images in flat equivalents.\n - [`gh-repos`](https://github.com/IonicaBizau/gh-repos#readme)—Get one or all the owner repositories from GitHub.\n - [`ghcal`](https://github.com/IonicaBizau/ghcal)—See the GitHub contributions calendar of a user in the command line.\n - [`ghosty`](https://github.com/IonicaBizau/ghosty#readme)—A wrapper around PhantomJS, downloading the Phantom binary.\n - [`git-stats`](https://github.com/IonicaBizau/git-stats)—Local git statistics including GitHub-like contributions calendars.\n - [`git-stats-importer`](https://github.com/IonicaBizau/git-stats-importer)—Imports your commits from a repository into git-stats history.\n - [`limit-it`](https://github.com/IonicaBizau/node-limit-it)—Run in parallel as many functions you want, but not more than <x> functions at the time.\n - [`obj-flatten`](https://github.com/IonicaBizau/obj-flatten#readme)—Convert nested objects in flatten ones.\n - [`page-changed`](https://github.com/IonicaBizau/node-page-changed)—Call a function when the page body is changed.\n - [`regarde`](https://github.com/IonicaBizau/regarde)—A tiny tool and library to watch commands.\n - [`scrape-it`](https://github.com/IonicaBizau/scrape-it#readme)—A Node.js scraper for humans.\n - [`tilda`](https://github.com/IonicaBizau/tilda)—Tiny module for building command line tools.\n - [`transformer`](https://github.com/IonicaBizau/transformer#readme)—Transform data using synchronous and asynchronous functions.\n - [`ul`](https://github.com/IonicaBizau/node-ul)—A minimalist utility library.\n - [`validify`](https://github.com/IonicaBizau/validify#readme)—Validation made easy.\n - [`write-file-p`](https://github.com/IonicaBizau/write-file-p#readme)—Create the directory structure and then create the file.\n\n## :scroll: License\n\n[MIT][license] © [Ionică Bizău][website]\n\n[patreon]: https://www.patreon.com/ionicabizau\n[paypal-donations]: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=RVXDDLKKLQRJW\n[donate-now]: http://i.imgur.com/6cMbHOC.png\n\n[license]: http://showalicense.com/?fullname=Ionic%C4%83%20Biz%C4%83u%20%3Cbizauionica%40gmail.com%3E%20(http%3A%2F%2Fionicabizau.net)&year=2015#license-mit\n[website]: http://ionicabizau.net\n[contributing]: /CONTRIBUTING.md\n[docs]: /DOCUMENTATION.md\n",
  "readmeFilename": "README.md",
  "_id": "typpy@2.3.6",
  "_from": "typpy@^2.3.4"
}

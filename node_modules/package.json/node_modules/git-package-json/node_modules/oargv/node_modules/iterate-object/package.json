{
  "name": "iterate-object",
  "version": "1.3.2",
  "description": "A convenient way to iterate objects.",
  "main": "lib/index.js",
  "directories": {
    "example": "example"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:IonicaBizau/node-iterate-object.git"
  },
  "keywords": [
    "iterate",
    "object"
  ],
  "author": {
    "name": "Ionică Bizău",
    "email": "bizauionica@gmail.com",
    "url": "http://ionicabizau.net"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/IonicaBizau/node-iterate-object/issues"
  },
  "homepage": "https://github.com/IonicaBizau/node-iterate-object",
  "readme": "# iterate-object [![PayPal](https://img.shields.io/badge/%24-paypal-f39c12.svg)][paypal-donations] [![Version](https://img.shields.io/npm/v/iterate-object.svg)](https://www.npmjs.com/package/iterate-object) [![Downloads](https://img.shields.io/npm/dt/iterate-object.svg)](https://www.npmjs.com/package/iterate-object) [![Get help on Codementor](https://cdn.codementor.io/badges/get_help_github.svg)](https://www.codementor.io/johnnyb?utm_source=github&utm_medium=button&utm_term=johnnyb&utm_campaign=github)\n\n> A convenient way to iterate objects.\n\n## :cloud: Installation\n    \n```sh\n$ npm i --save iterate-object\n```\n\n            \n## :clipboard: Example\n\n        \n\n```js\n// Dependencies\nvar IterateObject = require(\"iterate-object\");\n\n// Iterate this object\nIterateObject({\n    name: \"Bob\"\n  , age: 42\n}, function (value, name) {\n    console.log(name, value);\n});\n// => \"name\", \"Bob\"\n//    \"age\", 42\n\n// Iterate an array\nIterateObject([\n    1, 2, 3, 4, 5, 6, 7\n], function (value, i) {\n    console.log(\"v[\" + i + \"] = \" + value);\n});\n// => v[0] = 1\n//    v[1] = 2\n//    v[2] = 3\n//    v[3] = 4\n//    v[4] = 5\n//    v[5] = 6\n//    v[6] = 7\n\n// Iterate an array\nIterateObject([\n    \"Alice\", \"Bob\", \"Carol\", \"Dave\"\n], function (value, i, arr) {\n    console.log(\"Current: \" + value + (arr[i + 1] ? \" Next:\" + arr[i + 1] : \"\"));\n});\n// => Current: Alice Next:Bob\n//    Current: Bob Next:Carol\n//    Current: Carol Next:Dave\n//    Current: Dave\n```\n    \n## :memo: Documentation\n        \n### `iterateObject(obj, fn)`\nIterates an object. Note the object field order may differ.\n\n#### Params\n- **Object** `obj`: The input object.\n- **Function** `fn`: A function that will be called with the current value, field name and provided object.\n\n#### Return\n- **Function** The `iterateObject` function.\n\n        \n## :yum: How to contribute\nHave an idea? Found a bug? See [how to contribute][contributing].\n\n## :dizzy: Where is this library used?\nIf you are using this library in one of your projects, add it in this list. :sparkles:\n\n - [`bloggify-on-request`](https://github.com/Bloggify/on-request#readme)—Do custom stuff on request and optionally send a custom response.\n - [`bloggify-redirect`](https://github.com/Bloggify/redirect#readme)—A Bloggify plugin to handle the link redirects.\n - [`color-it`](https://github.com/IonicaBizau/node-color-it#readme)—Flat colors for your Node.js strings.\n - [`couleurs`](https://github.com/IonicaBizau/node-couleurs)—Add some color and styles to your Node.JS strings.\n - [`emoji-from-word`](https://github.com/IonicaBizau/emoji-from-word#readme)—Get emoji from input word.\n - [`emoji-name-map`](https://github.com/IonicaBizau/emoji-name-map#readme)—Name to unicode emoji mapping.\n - [`emoji-unicode-map`](https://github.com/IonicaBizau/emoji-unicode-map#readme)—Unicode to name emoji mapping.\n - [`emojic`](https://github.com/IonicaBizau/emojic#readme)—Emoji in your Node.js command line apps.\n - [`engine-builder`](https://github.com/IonicaBizau/engine-parser) (by jillix)—Engine composition parser.\n - [`engine-flow-types`](https://github.com/jillix/engine-flow-types#readme) (by jillix)—Low level library providing Engine flow types.\n - [`engine-parser`](https://github.com/IonicaBizau/engine-parser) (by jillix)—Engine composition parser.\n - [`enny`](https://github.com/IonicaBizau/enny) (by jillix)—Generate Engine compositions from human-readable inputs.\n - [`err`](https://github.com/IonicaBizau/err#readme)—A tiny library to create custom errors in JavaScript.\n - [`gh-following`](https://github.com/IonicaBizau/gh-following#readme)—Fetches the users you follow but they don't follow you and the users that follow you but you don't.\n - [`git-stats`](https://github.com/IonicaBizau/git-stats)—Local git statistics including GitHub-like contributions calendars.\n - [`gm-tools`](https://github.com/IonicaBizau/gm-tools#readme)—Friendly tools for interacting with GraphicsMagick.\n - [`gpm`](https://github.com/IonicaBizau/gpm)—npm + git = gpm - Install NPM packages and dependencies from git repositories.\n - [`love-you`](https://github.com/IonicaBizau/love-you#readme)—\"I love you\" in different languages. \n - [`map-o`](https://github.com/IonicaBizau/node-map-o)—Array-map like function for objects.\n - [`match`](https://github.com/IonicaBizau/match.js#readme)—Simplest way to create match memory games.\n - [`nodeice`](https://github.com/IonicaBizau/nodeice)—Another PDF invoice generator\n - [`oargv`](https://github.com/IonicaBizau/node-oargv)—Turns an object into a bash command.\n - [`obj-flatten`](https://github.com/IonicaBizau/obj-flatten#readme)—Convert nested objects in flatten ones.\n - [`obj-unflatten`](https://github.com/IonicaBizau/obj-unflatten#readme)—Convert flatten objects in nested ones.\n - [`svg.connectable.js`](https://github.com/jillix/svg.connectable.js) (by jillix)—A JavaScript library for connecting SVG things.\n\n## :scroll: License\n    \n[MIT][license] © [Ionică Bizău][website]\n    \n[paypal-donations]: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=RVXDDLKKLQRJW\n[donate-now]: http://i.imgur.com/6cMbHOC.png\n\n[license]: http://showalicense.com/?fullname=Ionic%C4%83%20Biz%C4%83u%20%3Cbizauionica%40gmail.com%3E%20(http%3A%2F%2Fionicabizau.net)&year=2015#license-mit\n[website]: http://ionicabizau.net\n[contributing]: /CONTRIBUTING.md\n[docs]: /DOCUMENTATION.md",
  "readmeFilename": "README.md",
  "_id": "iterate-object@1.3.2",
  "_from": "iterate-object@^1.1.0"
}
